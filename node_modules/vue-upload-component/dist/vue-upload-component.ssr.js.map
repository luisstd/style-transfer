{"version":3,"file":"vue-upload-component.ssr.js","sources":["../src/utils/request.js","../src/chunk/ChunkUploadHandler.js","../src/FileUpload.vue","../src/FileUpload.vue?vue&type=template&id=3a2bbfb2&lang.js","../node_modules/style-inject/dist/style-inject.es.js"],"sourcesContent":["/**\n * Creates a XHR request\n *\n * @param {Object} options\n */\nexport const createRequest = (options) => {\n  const xhr = new XMLHttpRequest()\n  xhr.open(options.method || 'GET', options.url)\n  xhr.responseType = 'json'\n  if (options.headers) {\n    Object.keys(options.headers).forEach(key => {\n      xhr.setRequestHeader(key, options.headers[key])\n    })\n  }\n\n  return xhr\n}\n\n/**\n * Sends a XHR request with certain body\n *\n * @param {XMLHttpRequest} xhr\n * @param {Object} body\n */\nexport const sendRequest = (xhr, body) => {\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        let response\n        try {\n          response = JSON.parse(xhr.response)\n        } catch (err) {\n          response = xhr.response\n        }\n        resolve(response)\n      } else {\n        reject(xhr.response)\n      }\n    }\n    xhr.onerror = () => reject(xhr.response)\n    xhr.send(JSON.stringify(body))\n  })\n}\n\n/**\n * Sends a XHR request with certain form data\n *\n * @param {XMLHttpRequest} xhr\n * @param {Object} data\n */\nexport const sendFormRequest = (xhr, data) => {\n  const body = new FormData()\n  for (let name in data) {\n    body.append(name, data[name])\n  }\n\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        let response\n        try {\n          response = JSON.parse(xhr.response)\n        } catch (err) {\n          response = xhr.response\n        }\n        resolve(response)\n      } else {\n        reject(xhr.response)\n      }\n    }\n    xhr.onerror = () => reject(xhr.response)\n    xhr.send(body)\n  })\n}\n\n/**\n * Creates and sends XHR request\n *\n * @param {Object} options\n *\n * @returns Promise\n */\nexport default function (options) {\n  const xhr = createRequest(options)\n\n  return sendRequest(xhr, options.body)\n}\n","import {\n  default as request,\n  createRequest,\n  sendFormRequest\n} from '../utils/request'\n\nexport default class ChunkUploadHandler {\n  /**\n   * Constructor\n   *\n   * @param {File} file\n   * @param {Object} options\n   */\n  constructor(file, options) {\n    this.file = file\n    this.options = options\n    this.chunks = []\n    this.sessionId = null\n    this.chunkSize = null\n    this.speedInterval = null\n  }\n\n  /**\n   * Gets the max retries from options\n   */\n  get maxRetries() {\n    return parseInt(this.options.maxRetries, 10)\n  }\n\n  /**\n   * Gets the max number of active chunks being uploaded at once from options\n   */\n  get maxActiveChunks() {\n    return parseInt(this.options.maxActive, 10)\n  }\n\n  /**\n   * Gets the file type\n   */\n  get fileType() {\n    return this.file.type\n  }\n\n  /**\n   * Gets the file size\n   */\n  get fileSize() {\n    return this.file.size\n  }\n\n  /**\n   * Gets the file name\n   */\n  get fileName() {\n    return this.file.name\n  }\n\n  /**\n   * Gets action (url) to upload the file\n   */\n  get action() {\n    return this.options.action || null\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in start phase\n   */\n  get startBody() {\n    return this.options.startBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in upload phase\n   */\n  get uploadBody() {\n    return this.options.uploadBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in finish phase\n   */\n  get finishBody() {\n    return this.options.finishBody || {}\n  }\n\n  /**\n   * Gets the headers of the requests from options\n   */\n  get headers() {\n    return this.options.headers || {}\n  }\n\n  /**\n   * Whether it's ready to upload files or not\n   */\n  get readyToUpload() {\n    return !!this.chunks\n  }\n\n  /**\n   * Gets the progress of the chunk upload\n   * - Gets all the completed chunks\n   * - Gets the progress of all the chunks that are being uploaded\n   */\n  get progress() {\n    const completedProgress = (this.chunksUploaded.length / this.chunks.length) * 100\n    const uploadingProgress = this.chunksUploading.reduce((progress, chunk) => {\n      return progress + ((chunk.progress | 0) / this.chunks.length)\n    }, 0)\n\n    return Math.min(completedProgress + uploadingProgress, 100)\n  }\n\n  /**\n   * Gets all the chunks that are pending to be uploaded\n   */\n  get chunksToUpload() {\n    return this.chunks.filter(chunk => {\n      return !chunk.active && !chunk.uploaded\n    })\n  }\n\n  /**\n   * Whether there are chunks to upload or not\n   */\n  get hasChunksToUpload() {\n    return this.chunksToUpload.length > 0\n  }\n\n  /**\n   * Gets all the chunks that are uploading\n   */\n  get chunksUploading() {\n    return this.chunks.filter(chunk => {\n      return !!chunk.xhr && !!chunk.active\n    })\n  }\n\n  /**\n   * Gets all the chunks that have finished uploading\n   */\n  get chunksUploaded() {\n    return this.chunks.filter(chunk => {\n      return !!chunk.uploaded\n    })\n  }\n\n  /**\n   * Creates all the chunks in the initial state\n   */\n  createChunks() {\n    this.chunks = []\n\n    let start = 0\n    let end = this.chunkSize\n    while (start < this.fileSize) {\n      this.chunks.push({\n        blob: this.file.file.slice(start, end),\n        startOffset: start,\n        active: false,\n        retries: this.maxRetries\n      })\n      start = end\n      end = start + this.chunkSize\n    }\n  }\n\n  /**\n   * Updates the progress of the file with the handler's progress\n   */\n  updateFileProgress() {\n    this.file.progress = this.progress\n  }\n\n  /**\n   * Paues the upload process\n   * - Stops all active requests\n   * - Sets the file not active\n   */\n  pause() {\n    this.file.active = false\n    this.stopChunks()\n  }\n\n  /**\n   * Stops all the current chunks\n   */\n  stopChunks() {\n    this.chunksUploading.forEach(chunk => {\n      chunk.xhr.abort()\n      chunk.active = false\n    })\n\n    this.stopSpeedCalc()\n  }\n\n  /**\n   * Resumes the file upload\n   * - Sets the file active\n   * - Starts the following chunks\n   */\n  resume() {\n    this.file.active = true\n    this.startChunking()\n  }\n\n  /**\n   * Starts the file upload\n   *\n   * @returns Promise\n   * - resolve  The file was uploaded\n   * - reject   The file upload failed\n   */\n  upload() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n    this.start()\n\n    return this.promise\n  }\n\n  /**\n   * Start phase\n   * Sends a request to the backend to initialise the chunks\n   */\n  start() {\n    request({\n      method: 'POST',\n      headers: { ...this.headers, 'Content-Type': 'application/json'},\n      url: this.action,\n      body: Object.assign(this.startBody, {\n        phase: 'start',\n        mime_type: this.fileType,\n        size: this.fileSize,\n        name: this.fileName\n      })\n    }).then(res => {\n      if (res.status !== 'success') {\n        this.file.response = res\n        return this.reject('server')\n      }\n\n      this.sessionId = res.data.session_id\n      this.chunkSize = res.data.end_offset\n\n      this.createChunks()\n      this.startChunking()\n    }).catch(res => {\n      this.file.response = res\n      this.reject('server')\n    })\n  }\n\n  /**\n   * Starts to upload chunks\n   */\n  startChunking() {\n    for (let i = 0; i < this.maxActiveChunks; i++) {\n      this.uploadNextChunk()\n    }\n\n    this.startSpeedCalc()\n  }\n\n  /**\n   * Uploads the next chunk\n   * - Won't do anything if the process is paused\n   * - Will start finish phase if there are no more chunks to upload\n   */\n  uploadNextChunk() {\n    if (this.file.active) {\n      if (this.hasChunksToUpload) {\n        return this.uploadChunk(this.chunksToUpload[0])\n      }\n\n      if (this.chunksUploading.length === 0) {\n        return this.finish()\n      }\n    }\n  }\n\n  /**\n   * Uploads a chunk\n   * - Sends the chunk to the backend\n   * - Sets the chunk as uploaded if everything went well\n   * - Decreases the number of retries if anything went wrong\n   * - Fails if there are no more retries\n   *\n   * @param {Object} chunk\n   */\n  uploadChunk(chunk) {\n    chunk.progress = 0\n    chunk.active = true\n    this.updateFileProgress()\n    chunk.xhr = createRequest({\n      method: 'POST',\n      headers: this.headers,\n      url: this.action\n    })\n\n    chunk.xhr.upload.addEventListener('progress', function (evt) {\n      if (evt.lengthComputable) {\n        chunk.progress = Math.round(evt.loaded / evt.total * 100)\n      }\n    }, false)\n\n    sendFormRequest(chunk.xhr, Object.assign(this.uploadBody, {\n      phase: 'upload',\n      session_id: this.sessionId,\n      start_offset: chunk.startOffset,\n      chunk: chunk.blob\n    })).then(res => {\n      chunk.active = false\n      if (res.status === 'success') {\n        chunk.uploaded = true\n      } else {\n        if (chunk.retries-- <= 0) {\n          this.stopChunks()\n          return this.reject('upload')\n        }\n      }\n\n      this.uploadNextChunk()\n    }).catch(() => {\n      chunk.active = false\n      if (chunk.retries-- <= 0) {\n        this.stopChunks()\n        return this.reject('upload')\n      }\n\n      this.uploadNextChunk()\n    })\n  }\n\n  /**\n   * Finish phase\n   * Sends a request to the backend to finish the process\n   */\n  finish() {\n    this.updateFileProgress()\n    this.stopSpeedCalc()\n\n    request({\n      method: 'POST',\n      headers: { ...this.headers, 'Content-Type': 'application/json' },\n      url: this.action,\n      body: Object.assign(this.finishBody, {\n        phase: 'finish',\n        session_id: this.sessionId\n      })\n    }).then(res => {\n      this.file.response = res\n      if (res.status !== 'success') {\n        return this.reject('server')\n      }\n\n      this.resolve(res)\n    }).catch(res => {\n      this.file.response = res\n      this.reject('server')\n    })\n  }\n\n\n  /**\n   * Sets an interval to calculate and\n   * set upload speed every 3 seconds\n   */\n  startSpeedCalc() {\n    this.file.speed = 0\n    let lastUploadedBytes = 0\n    if (!this.speedInterval) {\n      this.speedInterval = window.setInterval(() => {\n        let uploadedBytes = (this.progress / 100) * this.fileSize\n        this.file.speed = (uploadedBytes - lastUploadedBytes)\n        lastUploadedBytes = uploadedBytes\n      }, 1000)\n    }\n  }\n\n  /**\n   * Removes the upload speed interval\n   */\n  stopSpeedCalc() {\n    this.speedInterval && window.clearInterval(this.speedInterval)\n    this.speedInterval = null\n    this.file.speed = 0\n  }\n}\n","<template>\n  <span :class=\"className\">\n    <slot></slot>\n    <label :for=\"forId\"></label>    \n    <input\n      v-if=\"!reload\"\n      ref=\"input\"\n      type=\"file\"\n      :name=\"name\"\n      :id=\"forId\"\n      :accept=\"accept\"\n      :capture=\"capture\"\n      :disabled=\"disabled\"\n      :webkitdirectory=\"directory && features.directory\"\n      :allowdirs=\"directory && features.directory\"\n      :directory=\"directory && features.directory\"\n      :multiple=\"multiple && features.html5\"\n      @change=\"inputOnChange\"\n    />\n  </span>\n</template>\n<style>\n.file-uploads {\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  display: inline-block;\n}\n.file-uploads.file-uploads-html4 input, .file-uploads.file-uploads-html5 label {\n  /* background fix ie  click */\n  background: #fff;\n  opacity: 0;\n  font-size: 20em;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.file-uploads.file-uploads-html5 input, .file-uploads.file-uploads-html4 label {\n  /* background fix ie  click */\n  background: rgba(255, 255, 255, 0);\n  overflow: hidden;\n  position: fixed;\n  width: 1px;\n  height: 1px;\n  z-index: -1;\n  opacity: 0;\n}\n</style>\n<script lang=\"ts\">\nimport {PropType, defineComponent, h} from \"vue\";\n\n// @ts-ignore\nimport ChunkUploadDefaultHandler from './chunk/ChunkUploadHandler.js'\nconst CHUNK_DEFAULT_OPTIONS = {\n  headers: {},\n  action: '',\n  minSize: 1048576,\n  maxActive: 3,\n  maxRetries: 5,\n  handler: ChunkUploadDefaultHandler\n}\n\nexport interface ChunkOptions {\n    headers: { [key: string]: any };\n    action: string;\n    minSize: number;\n    maxActive: number;\n    maxRetries: number;\n    handler: any;\n}\n\nexport interface Data {\n    active: boolean;\n    dropActive: boolean;\n    files: VueUploadItem[];\n    maps: { [key: string]: VueUploadItem };\n    destroy: boolean;\n    uploading: number;\n    features: Features;\n    dropElement: null | HTMLElement;\n    reload: boolean;\n}\n\nexport interface Features {\n    html5: boolean;\n    directory: boolean;\n    drop: boolean;\n}\n\n\n\nexport interface VueUploadItem {\n    id: string;\n\n    // 是否是文件对象\n    readonly fileObject?: boolean,\n\n    // 文件名\n    name?: string;\n\n    // 文件字节\n    size?: number,\n\n    // 文件 mime 类型\n    type?: string,\n\n    // 是否激活中\n    active?: boolean,\n\n    // 错误消息\n    error?: Error | string,\n\n    // 是否成功\n    success?: boolean,\n\n    // post 地址\n    postAction?: string;\n\n    // putAction 地址\n    putAction?: string;\n\n    // timeout\n    timeout?: number;\n\n    // 请求 data\n    data?: { [key: string]: any }\n\n    // 请求 headers\n    headers?: { [key: string]: any }\n\n    // 响应信息\n    response?: { [key: string]: any };\n\n    // 进度\n    progress?: string;          // 只读\n\n    // 速度\n    speed?: 0; // 只读\n\n    // xhr 信息\n    file?: Blob; // 只读\n    xhr?: XMLHttpRequest; // 只读\n\n    // el 信息  仅有 html4 使用\n    el?: HTMLInputElement;\n\n    // iframe 信息 仅有 html4 使用\n    iframe?: HTMLElement;             // 只读\n\n    [key: string]: any;\n}\n\n\n\n\nexport interface FileSystemEntry {\n    isDirectory: boolean\n    isFile: boolean\n    name: string\n    fullPath: string\n    filesystem: string\n}\nexport interface FileSystemDirectoryReader {\n    readEntries: (\n        successCallback: (result: Array<FileSystemDirectoryEntry | FileSystemFileEntry>) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n}\nexport interface FileSystemFlags {\n    create?: boolean\n    exclusive?: boolean\n}\nexport interface FileSystemDirectoryEntry extends FileSystemEntry {\n    isDirectory: true\n    isFile: false\n    createReader: () => FileSystemDirectoryReader\n    getFile: (\n        path?: string,\n        options?: FileSystemFlags,\n        successCallback?: (result: FileSystemFileEntry) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n    getDirectory: (\n        path?: string,\n        options?: FileSystemFlags,\n        successCallback?: (result: FileSystemDirectoryEntry) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n}\nexport interface FileSystemFileEntry extends FileSystemEntry {\n    isDirectory: false\n    isFile: true\n    file: (cb: (file: File) => void) => void\n}\n\n\n\n\nexport default defineComponent({\n  props: {\n    inputId: {\n      type: String,\n    },\n    name: {\n      type: String,\n      default: 'file',\n    },\n    accept: {\n      type: String,\n    },\n    capture: {\n    },\n    disabled: {\n      default: false,\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    maximum: {\n      type: Number,\n    },\n    addIndex: {\n      type: [Boolean, Number],\n    },\n    directory: {\n      type: Boolean,\n    },\n    createDirectory: {\n      type: Boolean,\n      default: false\n    },\n    postAction: {\n      type: String,\n    },\n    putAction: {\n      type: String,\n    },\n    customAction: {\n      type: Function as PropType<(file: VueUploadItem, self: any) => Promise<VueUploadItem>>\n    },\n    headers: {\n      type: Object as PropType<{[key:string]: any}>,\n      default:() => {\n        return {}\n      },\n    },\n\n    data: {\n      type: Object as PropType<{[key:string]: any}>,\n      default:() => {\n        return {}\n      },\n    },\n    timeout: {\n      type: Number,\n      default: 0,\n    },\n    drop: {\n      default: false,\n    },\n    dropDirectory: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: Number,\n      default: 0,\n    },\n    extensions: {\n      type: [RegExp, String, Array] as PropType<RegExp| string| string[]>,\n      default: () => {\n        return []\n      },\n    },\n    modelValue: {\n      type: Array as PropType<VueUploadItem[]>,\n      default:() => {\n        return []\n      },\n    },\n    thread: {\n      type: Number,\n      default: 1,\n    },\n    // Chunk upload enabled\n    chunkEnabled: {\n      type: Boolean,\n      default: false\n    },\n    // Chunk upload properties\n    chunk: {\n      type: Object as PropType<{headers?: {[key:string]: any}; action?: string; minSize?: number; maxActive?: number; maxRetries?: number; handler?: any;}>,\n      default: (): ChunkOptions => {\n        return CHUNK_DEFAULT_OPTIONS\n      }\n    }\n  },\n  emits: [\n    'update:modelValue',\n    'input-filter',\n    'input-file',\n  ],\n  data(): Data {\n    return {\n      files: this.modelValue,\n      features: {\n        html5: true,\n        directory: false,\n        drop: false,\n      },\n      active: false,\n      dropActive: false,\n      uploading: 0,\n      destroy: false,\n      maps: {},\n      dropElement: null,\n      reload: false,\n    }\n  },\n  /**\n   * mounted\n   * @return {[type]} [description]\n   */\n  mounted() {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = true\n    // html5 特征\n    if (window.FormData && input.files) {\n      // 上传目录特征\n      // @ts-ignore\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\n        this.features.directory = true\n      }\n      // 拖拽特征\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\n        this.features.drop = true\n      }\n    } else {\n      this.features.html5 = false\n    }\n    // files 定位缓存\n    this.maps = {}\n    if (this.files) {\n      for (let i = 0; i < this.files.length; i++) {\n        const file = this.files[i]\n        this.maps[file.id] = file\n      }\n    }\n\n    // @ts-ignore\n    this.$nextTick( () => {\n      // 更新下父级\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n        // 拖拽渲染\n        this.$parent.$nextTick(() => {\n          this.watchDrop(this.drop)\n        })\n      } else {\n        // 拖拽渲染\n        this.watchDrop(this.drop)\n      }\n    })\n  },\n  /**\n   * beforeUnmount\n   * @return {[type]} [description]\n   */\n  beforeUnmount() {\n    // 已销毁\n    this.destroy = true\n    // 设置成不激活\n    this.active = false\n    // 销毁拖拽事件\n    this.watchDrop(false)\n    // 销毁不激活\n    this.watchActive(false)\n  },\n\n  computed: {\n    /**\n     * uploading 正在上传的线程\n     * @return {[type]} [description]\n     */\n    /**\n     * uploaded 文件列表是否全部已上传\n     * @return {[type]} [description]\n     */\n    uploaded() {\n      let file\n      for (let i = 0; i < this.files.length; i++) {\n        file = this.files[i]\n        if (file.fileObject && !file.error && !file.success) {\n          return false\n        }\n      }\n      return true\n    },\n    chunkOptions(): ChunkOptions {\n      return Object.assign(CHUNK_DEFAULT_OPTIONS, this.chunk)\n    },\n    className(): Array<string | undefined> {\n      return [\n        'file-uploads',\n        this.features.html5 ? 'file-uploads-html5' : 'file-uploads-html4',\n        this.features.directory && this.directory ? 'file-uploads-directory' : undefined,\n        this.features.drop && this.drop ? 'file-uploads-drop' : undefined,\n        this.disabled ? 'file-uploads-disabled' : undefined,\n      ]\n    },\n    forId(): string {\n      return this.inputId || this.name\n    },\n    iMaximum(): number {\n      if (this.maximum === undefined) {\n        return this.multiple ? 0 : 1\n      }\n      return this.maximum\n    },\n    iExtensions(): RegExp | undefined {\n      if (!this.extensions) {\n        return\n      }\n      if (this.extensions instanceof RegExp) {\n        return this.extensions\n      }\n      if (!this.extensions.length) {\n        return\n      }\n      let exts: string[] = []\n      if (typeof this.extensions === 'string') {\n        exts = this.extensions.split(',')\n      } else {\n        exts = this.extensions\n      }\n      exts = exts.map(function(value) { return value.trim() }).filter(function(value) { return value })\n      return new RegExp('\\\\.(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\n    },\n  },\n  watch: {\n    active(active: boolean) {\n      this.watchActive(active)\n    },\n    dropActive() {\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n    },\n    drop(value: boolean) {\n      this.watchDrop(value)\n    },\n    modelValue(files: VueUploadItem[]) {\n      if (this.files === files) {\n        return\n      }\n      this.files = files\n      const oldMaps = this.maps\n      // 重写 maps 缓存\n      this.maps = {}\n      for (let i = 0; i < this.files.length; i++) {\n        const file = this.files[i]\n        this.maps[file.id] = file\n      }\n      // add, update\n      for (const key in this.maps) {\n        const newFile = this.maps[key]\n        const oldFile = oldMaps[key]\n        if (newFile !== oldFile) {\n          this.emitFile(newFile, oldFile)\n        }\n      }\n      // delete\n      for (const key in oldMaps) {\n        if (!this.maps[key]) {\n          this.emitFile(undefined, oldMaps[key])\n        }\n      }\n    },\n  },\n  methods: {\n    newId(): string {\n      return Math.random().toString(36).substr(2)\n    },\n    // 清空\n    clear() {\n      if (this.files.length) {\n        const files = this.files\n        this.files = []\n        // 定位\n        this.maps = {}\n        // 事件\n        this.emitInput()\n        for (let i = 0; i < files.length; i++) {\n          this.emitFile(undefined, files[i])\n        }\n      }\n      return true\n    },\n    // 选择\n    get(id: string | VueUploadItem): VueUploadItem | false {\n      if (!id) {\n        return false\n      }\n      if (typeof id === 'object') {\n        return this.maps[id.id|| ''] || false\n      }\n      return this.maps[id] || false\n    },\n    // 添加\n    add(_files: VueUploadItem | Blob | Array<VueUploadItem | Blob>, index?: number | boolean): VueUploadItem | VueUploadItem[] | undefined {\n      // 不是数组整理成数组\n      let files: Array<VueUploadItem | Blob>\n      if (_files instanceof Array) {\n        files = _files\n      } else {\n        files = [_files]\n      }\n      if (index === undefined) {\n        // eslint-disable-next-line\n        index = this.addIndex\n      }\n      // 遍历规范对象\n      const addFiles: VueUploadItem[] = []\n      for (let i = 0; i < files.length; i++) {\n        let file: VueUploadItem | Blob = files[i]\n        if (this.features.html5 && file instanceof Blob) {\n          file = {\n            id: '',\n            file,\n            size: file.size,\n            // @ts-ignore\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\n            type: file.type,\n          }\n        }\n        file = file as VueUploadItem\n        let fileObject = false\n        if (file.fileObject === false) {\n          // false\n        } else if (file.fileObject) {\n          fileObject = true\n        } else if (typeof Element !== 'undefined' && file.el instanceof HTMLInputElement) {\n          fileObject = true\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\n          fileObject = true\n        }\n        if (fileObject) {\n          file = {\n            fileObject: true,\n            size: -1,\n            name: 'Filename',\n            type: '',\n            active: false,\n            error: '',\n            success: false,\n            putAction: this.putAction,\n            postAction: this.postAction,\n            timeout: this.timeout,\n            ...file,\n            response: {},\n            progress: '0.00',          // 只读\n            speed: 0,                  // 只读\n            // file: undefined,\n            // xhr: undefined,\n            // el: undefined,\n            // iframe: undefined,\n          }\n          file.data = {\n            ...this.data,\n            ...file.data ? file.data : {},\n          }\n          file.headers = {\n            ...this.headers,\n            ...file.headers ? file.headers : {},\n          }\n        }\n        // 必须包含 id\n        if (!file.id) {\n          file.id = this.newId();\n        }\n        if (this.emitFilter(file, undefined)) {\n          continue\n        }\n        // 最大数量限制\n        if (this.iMaximum > 1 && (addFiles.length + this.files.length) >= this.iMaximum) {\n          break\n        }\n        addFiles.push(file)\n        // 最大数量限制\n        if (this.iMaximum === 1) {\n          break\n        }\n      }\n      // 没有文件\n      if (!addFiles.length) {\n        return\n      }\n      // 如果是 1 清空\n      if (this.iMaximum === 1) {\n        this.clear()\n      }\n      // 添加进去 files\n      let newFiles\n      if (index === true || index === 0) {\n        newFiles = addFiles.concat(this.files)\n      } else if (index) {\n        newFiles = this.files.concat([])\n        newFiles.splice(index, 0, ...addFiles)\n      } else {\n        newFiles = this.files.concat(addFiles)\n      }\n      this.files = newFiles\n      // 定位\n      for (let i = 0; i < addFiles.length; i++) {\n        const file = addFiles[i]\n        this.maps[file.id] = file\n      }\n      // 事件\n      this.emitInput()\n      for (let i = 0; i < addFiles.length; i++) {\n        this.emitFile(addFiles[i], undefined)\n      }\n      return _files instanceof Array ? addFiles : addFiles[0]\n    },\n    // 添加表单文件\n    addInputFile(el: HTMLInputElement): Promise<VueUploadItem[]> {\n      const files: Array<VueUploadItem | File> = []\n      const maximumValue = this.iMaximum\n      // @ts-ignore\n      const entrys = el.webkitEntries || el.entries || undefined\n      if (entrys?.length) {\n        return this.getFileSystemEntry(entrys).then((files) => {\n          return this.add(files) as VueUploadItem[]\n        })\n      }\n      \n      if (el.files) {\n        for (let i = 0; i < el.files.length; i++) {\n          const file: File = el.files[i]\n          files.push({\n            id: '',\n            size: file.size,\n            // @ts-ignore\n            name: file.webkitRelativePath || file.relativePath || file.name,\n            type: file.type,\n            file,\n          })\n        }\n      } else {\n        let names = el.value.replace(/\\\\/g, '/').split('/')\n        if (!names || !names.length) {\n          names = [el.value]\n        }\n        // @ts-ignore\n        delete el.__vuex__\n        files.push({\n          id: '',\n          name: names[names.length - 1],\n          el,\n        })\n      }\n      return Promise.resolve(this.add(files) as VueUploadItem[])\n    },\n\n    // 添加 DataTransfer\n    addDataTransfer(dataTransfer: DataTransfer):Promise<VueUploadItem[] | undefined> {\n      // dataTransfer.items 支持\n      if (dataTransfer?.items?.length) {\n        const entrys: Array<File| FileSystemFileEntry | FileSystemDirectoryEntry> = []\n        // 遍历出所有 dataTransferVueUploadItem\n        for (let i = 0; i < dataTransfer.items.length; i++) {\n          const dataTransferTtem = dataTransfer.items[i]\n          let entry: File| FileSystemFileEntry | FileSystemDirectoryEntry | null\n          // @ts-ignore\n          if (dataTransferTtem.getAsEntry) {\n            // @ts-ignore\n            entry = dataTransferTtem.getAsEntry() || dataTransferTtem.getAsFile()\n          } else if (dataTransferTtem.webkitGetAsEntry) {\n            entry = dataTransferTtem.webkitGetAsEntry() || dataTransferTtem.getAsFile()\n          } else {\n            entry = dataTransferTtem.getAsFile()\n          }\n          if (entry) {\n            entrys.push(entry)\n          }\n        }\n        return this.getFileSystemEntry(entrys).then((files) => {\n          return this.add(files) as VueUploadItem[]\n        })\n      }\n\n      // dataTransfer.files 支持\n      const maximumValue = this.iMaximum\n      const files: Array<VueUploadItem | File> = []\n      if (dataTransfer.files.length) {\n        for (let i = 0; i < dataTransfer.files.length; i++) {\n          files.push(dataTransfer.files[i])\n          if (maximumValue > 0 && files.length >= maximumValue) {\n            break\n          }\n        }\n        return Promise.resolve(this.add(files) as VueUploadItem[])\n      }\n\n      return Promise.resolve([])\n    },\n\n     \n    // 获得 entrys    \n    getFileSystemEntry(entry: Array<File | FileSystemFileEntry | FileSystemDirectoryEntry> | File | FileSystemFileEntry | FileSystemDirectoryEntry, path = ''): Promise<VueUploadItem[]> {\n      return new Promise((resolve) => {\n        const maximumValue = this.iMaximum\n        \n        if (!entry) {\n          resolve([])\n          return\n        }\n\n        if (entry instanceof Array) {\n          // 多个\n          const uploadFiles: VueUploadItem[] = []\n          const forEach = (i:number) => {\n            const v = entry[i]\n            if (!v || (maximumValue > 0 && uploadFiles.length >= maximumValue)) {\n              return resolve(uploadFiles)\n            }\n            this.getFileSystemEntry(v, path).then(function(results) {\n              uploadFiles.push(...results)\n              forEach(i + 1)\n            })\n          }\n          forEach(0)\n          return \n        }\n\n        if (entry instanceof Blob) {\n          resolve([\n            {\n              id: '',\n              size: entry.size,\n              name: path + entry.name,\n              type: entry.type,\n              file: entry,\n            }\n          ])\n          return\n        }\n\n        \n        \n        if (entry.isFile) {\n          entry.file(function (file) {\n            resolve([\n              {\n                id:'',\n                size: file.size,\n                name: path + file.name,\n                type: file.type,\n                file,\n              }\n            ])\n          })\n          return\n        }\n        \n        if (entry.isDirectory && this.dropDirectory) {\n          const uploadFiles: VueUploadItem[] = []\n          // 目录也要添加到文件列表\n          if (this.createDirectory) {\n            uploadFiles.push({\n              id: '',\n              name: path + entry.name,\n              size: 0,\n              type: 'text/directory',\n              file: new File([], path + entry.name, {type: 'text/directory'}),\n            })\n          }\n\n          const dirReader = entry.createReader()\n          const readEntries = () => {\n            dirReader.readEntries((entries) => {\n              const forEach = (i:number) => {\n                if ((!entries[i] && i === 0) || (maximumValue > 0 && uploadFiles.length >= maximumValue)) {\n                  return resolve(uploadFiles)\n                }\n                if (!entries[i]) {\n                  return readEntries()\n                }\n                this.getFileSystemEntry(entries[i], path + entry.name + '/').then(function(results) {\n                  uploadFiles.push(...results)\n                  forEach(i + 1)\n                })\n              }\n              forEach(0)\n            })\n          }\n          readEntries()\n          return\n        }\n\n        resolve([])\n      })\n    },\n    // 替换\n    replace(id1:VueUploadItem | string, id2: VueUploadItem | string): boolean {\n      const file1 = this.get(id1)\n      const file2 = this.get(id2)\n      if (!file1 || !file2 || file1 === file2) {\n        return false\n      }\n      const files = this.files.concat([])\n      const index1 = files.indexOf(file1)\n      const index2 = files.indexOf(file2)\n      if (index1 === -1 || index2 === -1) {\n        return false\n      }\n      files[index1] = file2\n      files[index2] = file1\n      this.files = files\n      this.emitInput()\n      return true\n    },\n    // 移除\n    remove(id: VueUploadItem | string): VueUploadItem | false {\n      const file = this.get(id)\n      if (file) {\n        if (this.emitFilter(undefined, file)) {\n          return false\n        }\n        const files = this.files.concat([])\n        const index = files.indexOf(file)\n        if (index === -1) {\n          console.error('remove', file)\n          return false\n        }\n        files.splice(index, 1)\n        this.files = files\n        // 定位\n        delete this.maps[file.id]\n        // 事件\n        this.emitInput()\n        this.emitFile(undefined, file)\n      }\n      return file\n    },\n    // 更新\n    update(id: VueUploadItem | string, data: {[key:string]: any}): VueUploadItem | false {\n      const file = this.get(id)\n      if (file) {\n        const newFile = {\n          ...file,\n          ...data\n        }\n        // 停用必须加上错误\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\n          newFile.error = 'abort'\n        }\n        if (this.emitFilter(newFile, file)) {\n          return false\n        }\n        const files = this.files.concat([])\n        const index = files.indexOf(file)\n        if (index === -1) {\n          console.error('update', file)\n          return false\n        }\n        files.splice(index, 1, newFile)\n        this.files = files\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\n        delete this.maps[file.id]\n        this.maps[newFile.id] = newFile\n        // 事件\n        this.emitInput()\n        this.emitFile(newFile, file)\n        return newFile\n      }\n      return false\n    },\n    // 预处理 事件 过滤器\n    emitFilter(newFile: VueUploadItem | undefined, oldFile: VueUploadItem | undefined): boolean {\n      let isPrevent = false\n      this.$emit('input-filter', newFile, oldFile, function(prevent = true): boolean {\n        isPrevent = prevent\n        return isPrevent\n      })\n      return isPrevent\n    },\n\n    // 处理后 事件 分发\n    emitFile(newFile: VueUploadItem | undefined, oldFile: VueUploadItem | undefined) {\n      this.$emit('input-file', newFile, oldFile)\n      if (newFile?.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\n        this.uploading++\n        // 激活\n        // @ts-ignore\n        this.$nextTick(() => {\n          setTimeout(() => {\n            newFile && this.upload(newFile).then(() => {\n              if (newFile) {\n                // eslint-disable-next-line\n                newFile = this.get(newFile) || undefined\n              }\n              if (newFile?.fileObject) {\n                this.update(newFile, {\n                  active: false,\n                  success: !newFile.error\n                })\n              }\n            }).catch((e: any) => {\n              newFile && this.update(newFile, {\n                active: false,\n                success: false,\n                error: e.code || e.error || e.message || e\n              })\n            })\n          }, Math.ceil(Math.random() * 50 + 50))\n        })\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\n        // 停止\n        this.uploading--\n      }\n      // 自动延续激活\n      // @ts-ignore\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\n        this.watchActive(true)\n      }\n    },\n    emitInput() {\n      this.$emit('update:modelValue', this.files)\n    },\n    // 上传\n    upload(id: VueUploadItem | string): Promise<VueUploadItem> {\n      const file = this.get(id)\n      // 被删除\n      if (!file) {\n        return Promise.reject(new Error('not_exists'))\n      }\n      // 不是文件对象\n      if (!file.fileObject) {\n        return Promise.reject(new Error('file_object'))\n      }\n      // 有错误直接响应\n      if (file.error) {\n        if (file.error instanceof Error) {\n          return Promise.reject(file.error)\n        }\n        return Promise.reject(new Error(file.error))\n      }\n      // 已完成直接响应\n      if (file.success) {\n        return Promise.resolve(file)\n      }\n      // 后缀\n      if (file.name && this.iExtensions) {\n        if (file.name.search(this.iExtensions) === -1) {\n          return Promise.reject(new Error('extension'))\n        }\n      }\n\n      // 大小\n      if (this.size > 0 && file.size !== undefined && file.size >= 0 && file.size > this.size) {\n        return Promise.reject(new Error('size'))\n      }\n\n      if (this.customAction) {\n        return this.customAction(file, this)\n      }\n      if (this.features.html5) {\n        if (this.shouldUseChunkUpload(file)) {\n          return this.uploadChunk(file)\n        }\n        if (file.putAction) {\n          return this.uploadPut(file)\n        }\n        if (file.postAction) {\n          return this.uploadHtml5(file)\n        }\n      }\n      if (file.postAction) {\n        return this.uploadHtml4(file)\n      }\n      return Promise.reject(new Error('No action configured'))\n    },\n    /**\n     * Whether this file should be uploaded using chunk upload or not\n     *\n     * @param Object file\n     */\n    shouldUseChunkUpload (file: VueUploadItem) {\n      return this.chunkEnabled &&\n        !!this.chunkOptions.handler &&\n        file.size && file.size > this.chunkOptions.minSize\n    },\n    /**\n     * Upload a file using Chunk method\n     *\n     * @param File file\n     */\n    uploadChunk(file: VueUploadItem): Promise<VueUploadItem> {\n      const HandlerClass = this.chunkOptions.handler\n      file.chunk = new HandlerClass(file, this.chunkOptions)\n      return file.chunk.upload().then((res: any) => { return file })\n    },\n    uploadPut(file: VueUploadItem): Promise<VueUploadItem> {\n      const querys = []\n      let value\n      for (const key in file.data) {\n        value = file.data[key]\n        if (value !== null && value !== undefined) {\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\n        }\n      }\n      const putAction = file.putAction || ''\n      const queryString = querys.length ? (putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\n      const xhr = new XMLHttpRequest()\n      xhr.open('PUT', putAction + queryString)\n      return this.uploadXhr(xhr, file, file.file as File)\n    },\n    uploadHtml5(file: VueUploadItem): Promise<VueUploadItem> {\n      const form = new window.FormData()\n      let value\n      for (const key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          if (value instanceof File) {\n            form.append(key, value, value.name)\n          } else {\n            form.append(key, JSON.stringify(value))\n          }\n        } else if (value !== null && value !== undefined) {\n          form.append(key, value)\n        }\n      }\n      // @ts-ignore\n      form.append(this.name, file.file, file.file.name || file.file.filename  || file.name)\n      const xhr = new XMLHttpRequest()\n      xhr.open('POST', file.postAction || '')\n      return this.uploadXhr(xhr, file, form)\n    },\n\n    uploadXhr(xhr:XMLHttpRequest, ufile: VueUploadItem | undefined | false, body: FormData | Blob): Promise<VueUploadItem> {\n      let file = ufile\n      let speedTime = 0\n      let speedLoaded = 0\n\n      // 进度条\n      xhr.upload.onprogress = (e: ProgressEvent) => {\n        // 还未开始上传 已删除 未激活\n        if (!file) {\n          return\n        }\n        file = this.get(file)\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\n          return\n        }\n\n        // 进度 速度 每秒更新一次\n        const speedTime2 = Math.round(Date.now() / 1000)\n        if (speedTime2 === speedTime) {\n          return\n        }\n        speedTime = speedTime2\n\n        \n        file = this.update(file, {\n          progress: (e.loaded / e.total * 100).toFixed(2),\n          speed: e.loaded - speedLoaded,\n        })\n        speedLoaded = e.loaded\n      }\n\n      // 检查激活状态\n      let interval: number| undefined = window.setInterval(()  => {\n        if (file) {\n          if ((file = this.get(file))) {\n            if (file?.fileObject && !file.success && !file.error && file.active) {\n              return\n            }\n          }\n        }\n\n        if (interval) {\n          clearInterval(interval)\n          interval = undefined\n        }\n\n        try {\n          xhr.abort()\n          xhr.timeout = 1\n        } catch (e) {\n        }\n      }, 100)\n\n      return new Promise((resolve: (u: VueUploadItem) => void, reject: (e: Error) => void) => {\n        if (!file) {\n          reject(new Error('not_exists'))\n          return\n        }\n        let complete: boolean\n        const fn = (e: ProgressEvent) => {\n          // 已经处理过了\n          if (complete) {\n            return\n          }\n          complete = true\n          if (interval) {\n            clearInterval(interval)\n            interval = undefined\n          }\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n          file = this.get(file)\n\n          // 不存在直接响应\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n\n          // 不是文件对象\n          if (!file.fileObject) {\n            return reject(new Error('file_object'))\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            if (file.error instanceof Error) {\n              return reject(file.error)\n            }\n            return reject(new Error(file.error))\n          }\n\n          // 未激活\n          if (!file.active) {\n            return reject(new Error('abort'))\n          }\n\n\n          // 已完成 直接相应\n          if (file.success) {\n            return resolve(file)\n          }\n\n          const data: {[key: string]: any} = {}\n\n          switch (e.type) {\n            case 'timeout':\n            case 'abort':\n              data.error = e.type\n              break\n            case 'error':\n              if (!xhr.status) {\n                data.error = 'network'\n              } else if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              }\n              break\n            default:\n              if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              } else {\n                data.progress = '100.00'\n              }\n          }\n\n          if (xhr.responseText) {\n            const contentType = xhr.getResponseHeader('Content-Type')\n            if (contentType && contentType.indexOf('/json') !== -1) {\n              data.response = JSON.parse(xhr.responseText)\n            } else {\n              data.response = xhr.responseText\n            }\n          }\n\n          // 更新\n          // @ts-ignore\n          file = this.update(file, data)\n          \n          if (!file) {\n            return reject(new Error('abort'))\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            if (file.error instanceof Error) {\n              return reject(file.error)\n            }\n            return reject(new Error(file.error))\n          }\n\n          // 响应\n          return resolve(file)\n        }\n\n        // 事件\n        xhr.onload = fn\n        xhr.onerror = fn\n        xhr.onabort = fn\n        xhr.ontimeout = fn\n        \n\n        // 超时\n        if (file.timeout) {\n          xhr.timeout = file.timeout\n        }\n\n        // headers\n        for (const key in file.headers) {\n          xhr.setRequestHeader(key, file.headers[key])\n        }\n\n        // 更新 xhr\n        // @ts-ignore\n        file = this.update(file, { xhr })\n\n        // 开始上传\n        file && xhr.send(body)\n      })\n    },\n    uploadHtml4(ufile: VueUploadItem | undefined | false): Promise<VueUploadItem> {\n      let file = ufile\n      if (!file) {\n        return Promise.reject(new Error('not_exists'))\n      }\n      const onKeydown = function (e: any) {\n        if (e.keyCode === 27) {\n          e.preventDefault()\n        }\n      }\n\n      const iframe = document.createElement('iframe')\n      iframe.id = 'upload-iframe-' + file.id\n      iframe.name = 'upload-iframe-' + file.id\n      iframe.src = 'about:blank'\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\n\n\n      const form: HTMLFormElement = document.createElement('form')\n\n      form.setAttribute('action', file.postAction || '')\n\n      form.name = 'upload-form-' + file.id\n\n      form.setAttribute('method', 'POST')\n      form.setAttribute('target', 'upload-iframe-' + file.id)\n      form.setAttribute('enctype', 'multipart/form-data')\n\n      for (const key in file.data) {\n        let value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          value = JSON.stringify(value)\n        }\n        if (value !== null && value !== undefined) {\n          const el = document.createElement('input')\n          el.type = 'hidden'\n          el.name = key\n          el.value = value\n          form.appendChild(el)\n        }\n      }\n\n      form.appendChild(file.el as HTMLInputElement)\n\n      document.body.appendChild(iframe).appendChild(form)\n\n\n      const getResponseData = function (): string | null {\n        let doc\n        try {\n          if (iframe.contentWindow) {\n            doc = iframe.contentWindow.document\n          }\n        } catch (err) {\n        }\n        if (!doc) {\n          try {\n            // @ts-ignore\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\n          } catch (err) {\n            // @ts-ignore\n            doc = iframe.document\n          }\n        }\n        // @ts-ignore\n        if (doc?.body) {\n          return doc.body.innerHTML\n        }\n        return null\n      }\n\n      return new Promise((resolve: (u: VueUploadItem) => void, reject: (e: Error) => void) => {\n        setTimeout(() => {\n          if (!file)   {\n            reject(new Error('not_exists'))\n            return\n          }\n\n          file = this.update(file, { iframe })\n\n          // 不存在\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n\n          // 定时检查\n          let interval: number | undefined = window.setInterval(() => {\n            if (file) {\n              if ((file = this.get(file))) {\n                if (file.fileObject && !file.success && !file.error && file.active) {\n                  return\n                }\n              }\n            }\n\n            if (interval) {\n              clearInterval(interval)\n              interval = undefined\n            }\n            // @ts-ignore\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\n          }, 100)\n\n\n          let complete: boolean\n          const fn = (e: Event | string) => {\n            // 已经处理过了\n            if (complete) {\n              return\n            }\n            complete = true\n\n            if (interval) {\n              clearInterval(interval)\n              interval = undefined\n            }\n\n            // 关闭 esc 事件\n            document.body.removeEventListener('keydown', onKeydown)\n\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            file = this.get(file)\n\n            // 不存在直接响应\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            // 不是文件对象\n            if (!file.fileObject) {\n              return reject(new Error('file_object'))\n            }\n\n            // 有错误自动响应\n            if (file.error) {\n              if (file.error instanceof Error) {\n                return reject(file.error)\n              }\n              return reject(new Error(file.error))\n            }\n\n            // 未激活\n            if (!file.active) {\n              return reject(new Error('abort'))\n            }\n\n            // 已完成 直接相应\n            if (file.success) {\n              return resolve(file)\n            }\n\n            let response: any = getResponseData()\n            const data: {[key: string]: any} = {}\n            if (typeof e === 'string') {\n               return reject(new Error(e))\n            }\n            switch (e.type) {\n              case 'abort':\n                data.error = 'abort'\n                break\n              case 'error':\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.error = 'denied'\n                }\n                break\n              default:\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.progress = '100.00'\n                }\n            }\n\n            if (response !== null) {\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\n                try {\n                  response = JSON.parse(response)\n                } catch (err) {\n                }\n              }\n              data.response = response\n            }\n\n            // 更新\n            file = this.update(file, data)\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            if (file?.error) {\n              if (file.error instanceof Error) {\n                return reject(file.error)\n              }\n              return reject(new Error(file.error))\n            }\n\n            // 响应\n            return resolve(file)\n          }\n\n\n          // 添加事件\n          iframe.onload = fn\n          iframe.onerror = fn\n          iframe.onabort = fn\n\n\n          // 禁止 esc 键\n          document.body.addEventListener('keydown', onKeydown)\n\n          // 提交\n          form.submit()\n        }, 50)\n      }).then(function (res: VueUploadItem): VueUploadItem {\n        iframe?.parentNode?.removeChild(iframe)\n        return res\n      }).catch(function (res: any) {\n        iframe?.parentNode?.removeChild(iframe)\n        return res\n      })\n    },\n\n    watchActive(active: boolean) {\n      let file\n      let index = 0\n      while ((file = this.files[index])) {\n        index++\n        if (!file.fileObject) {\n          // 不是文件对象\n        } else if (active && !this.destroy) {\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\n            break\n          }\n          if (!file.active && !file.error && !file.success) {\n            this.update(file, { active: true })\n          }\n        } else {\n          if (file.active) {\n            this.update(file, { active: false })\n          }\n        }\n      }\n      if (this.uploading === 0) {\n        this.active = false\n      }\n    },\n\n    watchDrop(newDrop: boolean | string | HTMLElement | null, oldDrop: boolean | string | HTMLElement | undefined = undefined) {\n      if (!this.features.drop) {\n        return\n      }\n      if (newDrop === oldDrop) {\n        return\n      }\n\n      // 移除挂载\n      if (this.dropElement) {\n        try {\n          document.removeEventListener('dragenter', this.onDragenter, false)\n          document.removeEventListener('dragleave', this.onDragleave, false)\n          document.removeEventListener('drop', this.onDocumentDrop, false)\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\n        } catch (e) {\n        }\n      }\n\n      let el: HTMLElement | null = null\n\n      if (!newDrop) {\n        // empty\n      } else if (typeof newDrop === 'string') {\n        // @ts-ignore\n        el = document.querySelector(newDrop) || this.$root.$el.querySelector(newDrop)\n      } else if (newDrop === true) {\n        // @ts-ignore\n        el = this.$parent.$el\n      } else {\n        el = newDrop\n      }\n      this.dropElement = el\n\n      if (this.dropElement) {\n        document.addEventListener('dragenter', this.onDragenter, false)\n        document.addEventListener('dragleave', this.onDragleave, false)\n        document.addEventListener('drop', this.onDocumentDrop, false)\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\n        this.dropElement.addEventListener('drop', this.onDrop, false)\n      }\n    },\n\n    onDragenter(e: DragEvent) {\n      e.preventDefault()\n      if (this.dropActive) {\n        return\n      }\n      if (!e.dataTransfer) {\n        return\n      }\n      const dt = e.dataTransfer\n      if (dt?.files?.length) {\n        this.dropActive = true\n      } else if (!dt.types) {\n        this.dropActive = true\n      } else if (dt.types.indexOf && dt.types.indexOf('Files') !== -1) {\n        this.dropActive = true\n        // @ts-ignore\n      } else if (dt.types?.contains && dt.types.contains('Files')) {\n        this.dropActive = true\n      }\n    },\n    onDragleave(e: DragEvent) {\n      e.preventDefault()\n      if (!this.dropActive) {\n        return\n      }\n\n      // @ts-ignore\n      if (e.target.nodeName === 'HTML' || e.target === e.explicitOriginalTarget || (!e.fromElement && (e.clientX <= 0 || e.clientY <= 0 || e.clientX >= window.innerWidth || e.clientY >= window.innerHeight))) {\n        this.dropActive = false\n      }\n    },\n    onDragover(e: DragEvent) {\n      e.preventDefault()\n    },\n    onDocumentDrop() {\n      this.dropActive = false\n    },\n    onDrop(e: DragEvent) {\n      e.preventDefault()\n      e.dataTransfer && this.addDataTransfer(e.dataTransfer)\n    },\n    async inputOnChange(e: Event) {\n      if (!(e.target instanceof HTMLInputElement)) {\n        return Promise.reject(new Error(\"not HTMLInputElement\"))\n      }\n      const target = e.target\n      const reinput = (res: any) => {\n        this.reload = true\n        // @ts-ignore\n        this.$nextTick(() => {\n          this.reload = false\n        })\n        return res\n      }\n\n      return this.addInputFile(e.target).then(reinput).catch(reinput)\n    },\n  },\n})\n</script>\n","<template>\n  <span :class=\"className\">\n    <slot></slot>\n    <label :for=\"forId\"></label>    \n    <input\n      v-if=\"!reload\"\n      ref=\"input\"\n      type=\"file\"\n      :name=\"name\"\n      :id=\"forId\"\n      :accept=\"accept\"\n      :capture=\"capture\"\n      :disabled=\"disabled\"\n      :webkitdirectory=\"directory && features.directory\"\n      :allowdirs=\"directory && features.directory\"\n      :directory=\"directory && features.directory\"\n      :multiple=\"multiple && features.html5\"\n      @change=\"inputOnChange\"\n    />\n  </span>\n</template>\n<style>\n.file-uploads {\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  display: inline-block;\n}\n.file-uploads.file-uploads-html4 input, .file-uploads.file-uploads-html5 label {\n  /* background fix ie  click */\n  background: #fff;\n  opacity: 0;\n  font-size: 20em;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.file-uploads.file-uploads-html5 input, .file-uploads.file-uploads-html4 label {\n  /* background fix ie  click */\n  background: rgba(255, 255, 255, 0);\n  overflow: hidden;\n  position: fixed;\n  width: 1px;\n  height: 1px;\n  z-index: -1;\n  opacity: 0;\n}\n</style>\n<script lang=\"ts\">\nimport {PropType, defineComponent, h} from \"vue\";\n\n// @ts-ignore\nimport ChunkUploadDefaultHandler from './chunk/ChunkUploadHandler.js'\nconst CHUNK_DEFAULT_OPTIONS = {\n  headers: {},\n  action: '',\n  minSize: 1048576,\n  maxActive: 3,\n  maxRetries: 5,\n  handler: ChunkUploadDefaultHandler\n}\n\nexport interface ChunkOptions {\n    headers: { [key: string]: any };\n    action: string;\n    minSize: number;\n    maxActive: number;\n    maxRetries: number;\n    handler: any;\n}\n\nexport interface Data {\n    active: boolean;\n    dropActive: boolean;\n    files: VueUploadItem[];\n    maps: { [key: string]: VueUploadItem };\n    destroy: boolean;\n    uploading: number;\n    features: Features;\n    dropElement: null | HTMLElement;\n    reload: boolean;\n}\n\nexport interface Features {\n    html5: boolean;\n    directory: boolean;\n    drop: boolean;\n}\n\n\n\nexport interface VueUploadItem {\n    id: string;\n\n    // 是否是文件对象\n    readonly fileObject?: boolean,\n\n    // 文件名\n    name?: string;\n\n    // 文件字节\n    size?: number,\n\n    // 文件 mime 类型\n    type?: string,\n\n    // 是否激活中\n    active?: boolean,\n\n    // 错误消息\n    error?: Error | string,\n\n    // 是否成功\n    success?: boolean,\n\n    // post 地址\n    postAction?: string;\n\n    // putAction 地址\n    putAction?: string;\n\n    // timeout\n    timeout?: number;\n\n    // 请求 data\n    data?: { [key: string]: any }\n\n    // 请求 headers\n    headers?: { [key: string]: any }\n\n    // 响应信息\n    response?: { [key: string]: any };\n\n    // 进度\n    progress?: string;          // 只读\n\n    // 速度\n    speed?: 0; // 只读\n\n    // xhr 信息\n    file?: Blob; // 只读\n    xhr?: XMLHttpRequest; // 只读\n\n    // el 信息  仅有 html4 使用\n    el?: HTMLInputElement;\n\n    // iframe 信息 仅有 html4 使用\n    iframe?: HTMLElement;             // 只读\n\n    [key: string]: any;\n}\n\n\n\n\nexport interface FileSystemEntry {\n    isDirectory: boolean\n    isFile: boolean\n    name: string\n    fullPath: string\n    filesystem: string\n}\nexport interface FileSystemDirectoryReader {\n    readEntries: (\n        successCallback: (result: Array<FileSystemDirectoryEntry | FileSystemFileEntry>) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n}\nexport interface FileSystemFlags {\n    create?: boolean\n    exclusive?: boolean\n}\nexport interface FileSystemDirectoryEntry extends FileSystemEntry {\n    isDirectory: true\n    isFile: false\n    createReader: () => FileSystemDirectoryReader\n    getFile: (\n        path?: string,\n        options?: FileSystemFlags,\n        successCallback?: (result: FileSystemFileEntry) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n    getDirectory: (\n        path?: string,\n        options?: FileSystemFlags,\n        successCallback?: (result: FileSystemDirectoryEntry) => void,\n        errorCallback?: (error: DOMError) => void,\n    ) => void\n}\nexport interface FileSystemFileEntry extends FileSystemEntry {\n    isDirectory: false\n    isFile: true\n    file: (cb: (file: File) => void) => void\n}\n\n\n\n\nexport default defineComponent({\n  props: {\n    inputId: {\n      type: String,\n    },\n    name: {\n      type: String,\n      default: 'file',\n    },\n    accept: {\n      type: String,\n    },\n    capture: {\n    },\n    disabled: {\n      default: false,\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    maximum: {\n      type: Number,\n    },\n    addIndex: {\n      type: [Boolean, Number],\n    },\n    directory: {\n      type: Boolean,\n    },\n    createDirectory: {\n      type: Boolean,\n      default: false\n    },\n    postAction: {\n      type: String,\n    },\n    putAction: {\n      type: String,\n    },\n    customAction: {\n      type: Function as PropType<(file: VueUploadItem, self: any) => Promise<VueUploadItem>>\n    },\n    headers: {\n      type: Object as PropType<{[key:string]: any}>,\n      default:() => {\n        return {}\n      },\n    },\n\n    data: {\n      type: Object as PropType<{[key:string]: any}>,\n      default:() => {\n        return {}\n      },\n    },\n    timeout: {\n      type: Number,\n      default: 0,\n    },\n    drop: {\n      default: false,\n    },\n    dropDirectory: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: Number,\n      default: 0,\n    },\n    extensions: {\n      type: [RegExp, String, Array] as PropType<RegExp| string| string[]>,\n      default: () => {\n        return []\n      },\n    },\n    modelValue: {\n      type: Array as PropType<VueUploadItem[]>,\n      default:() => {\n        return []\n      },\n    },\n    thread: {\n      type: Number,\n      default: 1,\n    },\n    // Chunk upload enabled\n    chunkEnabled: {\n      type: Boolean,\n      default: false\n    },\n    // Chunk upload properties\n    chunk: {\n      type: Object as PropType<{headers?: {[key:string]: any}; action?: string; minSize?: number; maxActive?: number; maxRetries?: number; handler?: any;}>,\n      default: (): ChunkOptions => {\n        return CHUNK_DEFAULT_OPTIONS\n      }\n    }\n  },\n  emits: [\n    'update:modelValue',\n    'input-filter',\n    'input-file',\n  ],\n  data(): Data {\n    return {\n      files: this.modelValue,\n      features: {\n        html5: true,\n        directory: false,\n        drop: false,\n      },\n      active: false,\n      dropActive: false,\n      uploading: 0,\n      destroy: false,\n      maps: {},\n      dropElement: null,\n      reload: false,\n    }\n  },\n  /**\n   * mounted\n   * @return {[type]} [description]\n   */\n  mounted() {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = true\n    // html5 特征\n    if (window.FormData && input.files) {\n      // 上传目录特征\n      // @ts-ignore\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\n        this.features.directory = true\n      }\n      // 拖拽特征\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\n        this.features.drop = true\n      }\n    } else {\n      this.features.html5 = false\n    }\n    // files 定位缓存\n    this.maps = {}\n    if (this.files) {\n      for (let i = 0; i < this.files.length; i++) {\n        const file = this.files[i]\n        this.maps[file.id] = file\n      }\n    }\n\n    // @ts-ignore\n    this.$nextTick( () => {\n      // 更新下父级\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n        // 拖拽渲染\n        this.$parent.$nextTick(() => {\n          this.watchDrop(this.drop)\n        })\n      } else {\n        // 拖拽渲染\n        this.watchDrop(this.drop)\n      }\n    })\n  },\n  /**\n   * beforeUnmount\n   * @return {[type]} [description]\n   */\n  beforeUnmount() {\n    // 已销毁\n    this.destroy = true\n    // 设置成不激活\n    this.active = false\n    // 销毁拖拽事件\n    this.watchDrop(false)\n    // 销毁不激活\n    this.watchActive(false)\n  },\n\n  computed: {\n    /**\n     * uploading 正在上传的线程\n     * @return {[type]} [description]\n     */\n    /**\n     * uploaded 文件列表是否全部已上传\n     * @return {[type]} [description]\n     */\n    uploaded() {\n      let file\n      for (let i = 0; i < this.files.length; i++) {\n        file = this.files[i]\n        if (file.fileObject && !file.error && !file.success) {\n          return false\n        }\n      }\n      return true\n    },\n    chunkOptions(): ChunkOptions {\n      return Object.assign(CHUNK_DEFAULT_OPTIONS, this.chunk)\n    },\n    className(): Array<string | undefined> {\n      return [\n        'file-uploads',\n        this.features.html5 ? 'file-uploads-html5' : 'file-uploads-html4',\n        this.features.directory && this.directory ? 'file-uploads-directory' : undefined,\n        this.features.drop && this.drop ? 'file-uploads-drop' : undefined,\n        this.disabled ? 'file-uploads-disabled' : undefined,\n      ]\n    },\n    forId(): string {\n      return this.inputId || this.name\n    },\n    iMaximum(): number {\n      if (this.maximum === undefined) {\n        return this.multiple ? 0 : 1\n      }\n      return this.maximum\n    },\n    iExtensions(): RegExp | undefined {\n      if (!this.extensions) {\n        return\n      }\n      if (this.extensions instanceof RegExp) {\n        return this.extensions\n      }\n      if (!this.extensions.length) {\n        return\n      }\n      let exts: string[] = []\n      if (typeof this.extensions === 'string') {\n        exts = this.extensions.split(',')\n      } else {\n        exts = this.extensions\n      }\n      exts = exts.map(function(value) { return value.trim() }).filter(function(value) { return value })\n      return new RegExp('\\\\.(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\n    },\n  },\n  watch: {\n    active(active: boolean) {\n      this.watchActive(active)\n    },\n    dropActive() {\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n    },\n    drop(value: boolean) {\n      this.watchDrop(value)\n    },\n    modelValue(files: VueUploadItem[]) {\n      if (this.files === files) {\n        return\n      }\n      this.files = files\n      const oldMaps = this.maps\n      // 重写 maps 缓存\n      this.maps = {}\n      for (let i = 0; i < this.files.length; i++) {\n        const file = this.files[i]\n        this.maps[file.id] = file\n      }\n      // add, update\n      for (const key in this.maps) {\n        const newFile = this.maps[key]\n        const oldFile = oldMaps[key]\n        if (newFile !== oldFile) {\n          this.emitFile(newFile, oldFile)\n        }\n      }\n      // delete\n      for (const key in oldMaps) {\n        if (!this.maps[key]) {\n          this.emitFile(undefined, oldMaps[key])\n        }\n      }\n    },\n  },\n  methods: {\n    newId(): string {\n      return Math.random().toString(36).substr(2)\n    },\n    // 清空\n    clear() {\n      if (this.files.length) {\n        const files = this.files\n        this.files = []\n        // 定位\n        this.maps = {}\n        // 事件\n        this.emitInput()\n        for (let i = 0; i < files.length; i++) {\n          this.emitFile(undefined, files[i])\n        }\n      }\n      return true\n    },\n    // 选择\n    get(id: string | VueUploadItem): VueUploadItem | false {\n      if (!id) {\n        return false\n      }\n      if (typeof id === 'object') {\n        return this.maps[id.id|| ''] || false\n      }\n      return this.maps[id] || false\n    },\n    // 添加\n    add(_files: VueUploadItem | Blob | Array<VueUploadItem | Blob>, index?: number | boolean): VueUploadItem | VueUploadItem[] | undefined {\n      // 不是数组整理成数组\n      let files: Array<VueUploadItem | Blob>\n      if (_files instanceof Array) {\n        files = _files\n      } else {\n        files = [_files]\n      }\n      if (index === undefined) {\n        // eslint-disable-next-line\n        index = this.addIndex\n      }\n      // 遍历规范对象\n      const addFiles: VueUploadItem[] = []\n      for (let i = 0; i < files.length; i++) {\n        let file: VueUploadItem | Blob = files[i]\n        if (this.features.html5 && file instanceof Blob) {\n          file = {\n            id: '',\n            file,\n            size: file.size,\n            // @ts-ignore\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\n            type: file.type,\n          }\n        }\n        file = file as VueUploadItem\n        let fileObject = false\n        if (file.fileObject === false) {\n          // false\n        } else if (file.fileObject) {\n          fileObject = true\n        } else if (typeof Element !== 'undefined' && file.el instanceof HTMLInputElement) {\n          fileObject = true\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\n          fileObject = true\n        }\n        if (fileObject) {\n          file = {\n            fileObject: true,\n            size: -1,\n            name: 'Filename',\n            type: '',\n            active: false,\n            error: '',\n            success: false,\n            putAction: this.putAction,\n            postAction: this.postAction,\n            timeout: this.timeout,\n            ...file,\n            response: {},\n            progress: '0.00',          // 只读\n            speed: 0,                  // 只读\n            // file: undefined,\n            // xhr: undefined,\n            // el: undefined,\n            // iframe: undefined,\n          }\n          file.data = {\n            ...this.data,\n            ...file.data ? file.data : {},\n          }\n          file.headers = {\n            ...this.headers,\n            ...file.headers ? file.headers : {},\n          }\n        }\n        // 必须包含 id\n        if (!file.id) {\n          file.id = this.newId();\n        }\n        if (this.emitFilter(file, undefined)) {\n          continue\n        }\n        // 最大数量限制\n        if (this.iMaximum > 1 && (addFiles.length + this.files.length) >= this.iMaximum) {\n          break\n        }\n        addFiles.push(file)\n        // 最大数量限制\n        if (this.iMaximum === 1) {\n          break\n        }\n      }\n      // 没有文件\n      if (!addFiles.length) {\n        return\n      }\n      // 如果是 1 清空\n      if (this.iMaximum === 1) {\n        this.clear()\n      }\n      // 添加进去 files\n      let newFiles\n      if (index === true || index === 0) {\n        newFiles = addFiles.concat(this.files)\n      } else if (index) {\n        newFiles = this.files.concat([])\n        newFiles.splice(index, 0, ...addFiles)\n      } else {\n        newFiles = this.files.concat(addFiles)\n      }\n      this.files = newFiles\n      // 定位\n      for (let i = 0; i < addFiles.length; i++) {\n        const file = addFiles[i]\n        this.maps[file.id] = file\n      }\n      // 事件\n      this.emitInput()\n      for (let i = 0; i < addFiles.length; i++) {\n        this.emitFile(addFiles[i], undefined)\n      }\n      return _files instanceof Array ? addFiles : addFiles[0]\n    },\n    // 添加表单文件\n    addInputFile(el: HTMLInputElement): Promise<VueUploadItem[]> {\n      const files: Array<VueUploadItem | File> = []\n      const maximumValue = this.iMaximum\n      // @ts-ignore\n      const entrys = el.webkitEntries || el.entries || undefined\n      if (entrys?.length) {\n        return this.getFileSystemEntry(entrys).then((files) => {\n          return this.add(files) as VueUploadItem[]\n        })\n      }\n      \n      if (el.files) {\n        for (let i = 0; i < el.files.length; i++) {\n          const file: File = el.files[i]\n          files.push({\n            id: '',\n            size: file.size,\n            // @ts-ignore\n            name: file.webkitRelativePath || file.relativePath || file.name,\n            type: file.type,\n            file,\n          })\n        }\n      } else {\n        let names = el.value.replace(/\\\\/g, '/').split('/')\n        if (!names || !names.length) {\n          names = [el.value]\n        }\n        // @ts-ignore\n        delete el.__vuex__\n        files.push({\n          id: '',\n          name: names[names.length - 1],\n          el,\n        })\n      }\n      return Promise.resolve(this.add(files) as VueUploadItem[])\n    },\n\n    // 添加 DataTransfer\n    addDataTransfer(dataTransfer: DataTransfer):Promise<VueUploadItem[] | undefined> {\n      // dataTransfer.items 支持\n      if (dataTransfer?.items?.length) {\n        const entrys: Array<File| FileSystemFileEntry | FileSystemDirectoryEntry> = []\n        // 遍历出所有 dataTransferVueUploadItem\n        for (let i = 0; i < dataTransfer.items.length; i++) {\n          const dataTransferTtem = dataTransfer.items[i]\n          let entry: File| FileSystemFileEntry | FileSystemDirectoryEntry | null\n          // @ts-ignore\n          if (dataTransferTtem.getAsEntry) {\n            // @ts-ignore\n            entry = dataTransferTtem.getAsEntry() || dataTransferTtem.getAsFile()\n          } else if (dataTransferTtem.webkitGetAsEntry) {\n            entry = dataTransferTtem.webkitGetAsEntry() || dataTransferTtem.getAsFile()\n          } else {\n            entry = dataTransferTtem.getAsFile()\n          }\n          if (entry) {\n            entrys.push(entry)\n          }\n        }\n        return this.getFileSystemEntry(entrys).then((files) => {\n          return this.add(files) as VueUploadItem[]\n        })\n      }\n\n      // dataTransfer.files 支持\n      const maximumValue = this.iMaximum\n      const files: Array<VueUploadItem | File> = []\n      if (dataTransfer.files.length) {\n        for (let i = 0; i < dataTransfer.files.length; i++) {\n          files.push(dataTransfer.files[i])\n          if (maximumValue > 0 && files.length >= maximumValue) {\n            break\n          }\n        }\n        return Promise.resolve(this.add(files) as VueUploadItem[])\n      }\n\n      return Promise.resolve([])\n    },\n\n     \n    // 获得 entrys    \n    getFileSystemEntry(entry: Array<File | FileSystemFileEntry | FileSystemDirectoryEntry> | File | FileSystemFileEntry | FileSystemDirectoryEntry, path = ''): Promise<VueUploadItem[]> {\n      return new Promise((resolve) => {\n        const maximumValue = this.iMaximum\n        \n        if (!entry) {\n          resolve([])\n          return\n        }\n\n        if (entry instanceof Array) {\n          // 多个\n          const uploadFiles: VueUploadItem[] = []\n          const forEach = (i:number) => {\n            const v = entry[i]\n            if (!v || (maximumValue > 0 && uploadFiles.length >= maximumValue)) {\n              return resolve(uploadFiles)\n            }\n            this.getFileSystemEntry(v, path).then(function(results) {\n              uploadFiles.push(...results)\n              forEach(i + 1)\n            })\n          }\n          forEach(0)\n          return \n        }\n\n        if (entry instanceof Blob) {\n          resolve([\n            {\n              id: '',\n              size: entry.size,\n              name: path + entry.name,\n              type: entry.type,\n              file: entry,\n            }\n          ])\n          return\n        }\n\n        \n        \n        if (entry.isFile) {\n          entry.file(function (file) {\n            resolve([\n              {\n                id:'',\n                size: file.size,\n                name: path + file.name,\n                type: file.type,\n                file,\n              }\n            ])\n          })\n          return\n        }\n        \n        if (entry.isDirectory && this.dropDirectory) {\n          const uploadFiles: VueUploadItem[] = []\n          // 目录也要添加到文件列表\n          if (this.createDirectory) {\n            uploadFiles.push({\n              id: '',\n              name: path + entry.name,\n              size: 0,\n              type: 'text/directory',\n              file: new File([], path + entry.name, {type: 'text/directory'}),\n            })\n          }\n\n          const dirReader = entry.createReader()\n          const readEntries = () => {\n            dirReader.readEntries((entries) => {\n              const forEach = (i:number) => {\n                if ((!entries[i] && i === 0) || (maximumValue > 0 && uploadFiles.length >= maximumValue)) {\n                  return resolve(uploadFiles)\n                }\n                if (!entries[i]) {\n                  return readEntries()\n                }\n                this.getFileSystemEntry(entries[i], path + entry.name + '/').then(function(results) {\n                  uploadFiles.push(...results)\n                  forEach(i + 1)\n                })\n              }\n              forEach(0)\n            })\n          }\n          readEntries()\n          return\n        }\n\n        resolve([])\n      })\n    },\n    // 替换\n    replace(id1:VueUploadItem | string, id2: VueUploadItem | string): boolean {\n      const file1 = this.get(id1)\n      const file2 = this.get(id2)\n      if (!file1 || !file2 || file1 === file2) {\n        return false\n      }\n      const files = this.files.concat([])\n      const index1 = files.indexOf(file1)\n      const index2 = files.indexOf(file2)\n      if (index1 === -1 || index2 === -1) {\n        return false\n      }\n      files[index1] = file2\n      files[index2] = file1\n      this.files = files\n      this.emitInput()\n      return true\n    },\n    // 移除\n    remove(id: VueUploadItem | string): VueUploadItem | false {\n      const file = this.get(id)\n      if (file) {\n        if (this.emitFilter(undefined, file)) {\n          return false\n        }\n        const files = this.files.concat([])\n        const index = files.indexOf(file)\n        if (index === -1) {\n          console.error('remove', file)\n          return false\n        }\n        files.splice(index, 1)\n        this.files = files\n        // 定位\n        delete this.maps[file.id]\n        // 事件\n        this.emitInput()\n        this.emitFile(undefined, file)\n      }\n      return file\n    },\n    // 更新\n    update(id: VueUploadItem | string, data: {[key:string]: any}): VueUploadItem | false {\n      const file = this.get(id)\n      if (file) {\n        const newFile = {\n          ...file,\n          ...data\n        }\n        // 停用必须加上错误\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\n          newFile.error = 'abort'\n        }\n        if (this.emitFilter(newFile, file)) {\n          return false\n        }\n        const files = this.files.concat([])\n        const index = files.indexOf(file)\n        if (index === -1) {\n          console.error('update', file)\n          return false\n        }\n        files.splice(index, 1, newFile)\n        this.files = files\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\n        delete this.maps[file.id]\n        this.maps[newFile.id] = newFile\n        // 事件\n        this.emitInput()\n        this.emitFile(newFile, file)\n        return newFile\n      }\n      return false\n    },\n    // 预处理 事件 过滤器\n    emitFilter(newFile: VueUploadItem | undefined, oldFile: VueUploadItem | undefined): boolean {\n      let isPrevent = false\n      this.$emit('input-filter', newFile, oldFile, function(prevent = true): boolean {\n        isPrevent = prevent\n        return isPrevent\n      })\n      return isPrevent\n    },\n\n    // 处理后 事件 分发\n    emitFile(newFile: VueUploadItem | undefined, oldFile: VueUploadItem | undefined) {\n      this.$emit('input-file', newFile, oldFile)\n      if (newFile?.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\n        this.uploading++\n        // 激活\n        // @ts-ignore\n        this.$nextTick(() => {\n          setTimeout(() => {\n            newFile && this.upload(newFile).then(() => {\n              if (newFile) {\n                // eslint-disable-next-line\n                newFile = this.get(newFile) || undefined\n              }\n              if (newFile?.fileObject) {\n                this.update(newFile, {\n                  active: false,\n                  success: !newFile.error\n                })\n              }\n            }).catch((e: any) => {\n              newFile && this.update(newFile, {\n                active: false,\n                success: false,\n                error: e.code || e.error || e.message || e\n              })\n            })\n          }, Math.ceil(Math.random() * 50 + 50))\n        })\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\n        // 停止\n        this.uploading--\n      }\n      // 自动延续激活\n      // @ts-ignore\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\n        this.watchActive(true)\n      }\n    },\n    emitInput() {\n      this.$emit('update:modelValue', this.files)\n    },\n    // 上传\n    upload(id: VueUploadItem | string): Promise<VueUploadItem> {\n      const file = this.get(id)\n      // 被删除\n      if (!file) {\n        return Promise.reject(new Error('not_exists'))\n      }\n      // 不是文件对象\n      if (!file.fileObject) {\n        return Promise.reject(new Error('file_object'))\n      }\n      // 有错误直接响应\n      if (file.error) {\n        if (file.error instanceof Error) {\n          return Promise.reject(file.error)\n        }\n        return Promise.reject(new Error(file.error))\n      }\n      // 已完成直接响应\n      if (file.success) {\n        return Promise.resolve(file)\n      }\n      // 后缀\n      if (file.name && this.iExtensions) {\n        if (file.name.search(this.iExtensions) === -1) {\n          return Promise.reject(new Error('extension'))\n        }\n      }\n\n      // 大小\n      if (this.size > 0 && file.size !== undefined && file.size >= 0 && file.size > this.size) {\n        return Promise.reject(new Error('size'))\n      }\n\n      if (this.customAction) {\n        return this.customAction(file, this)\n      }\n      if (this.features.html5) {\n        if (this.shouldUseChunkUpload(file)) {\n          return this.uploadChunk(file)\n        }\n        if (file.putAction) {\n          return this.uploadPut(file)\n        }\n        if (file.postAction) {\n          return this.uploadHtml5(file)\n        }\n      }\n      if (file.postAction) {\n        return this.uploadHtml4(file)\n      }\n      return Promise.reject(new Error('No action configured'))\n    },\n    /**\n     * Whether this file should be uploaded using chunk upload or not\n     *\n     * @param Object file\n     */\n    shouldUseChunkUpload (file: VueUploadItem) {\n      return this.chunkEnabled &&\n        !!this.chunkOptions.handler &&\n        file.size && file.size > this.chunkOptions.minSize\n    },\n    /**\n     * Upload a file using Chunk method\n     *\n     * @param File file\n     */\n    uploadChunk(file: VueUploadItem): Promise<VueUploadItem> {\n      const HandlerClass = this.chunkOptions.handler\n      file.chunk = new HandlerClass(file, this.chunkOptions)\n      return file.chunk.upload().then((res: any) => { return file })\n    },\n    uploadPut(file: VueUploadItem): Promise<VueUploadItem> {\n      const querys = []\n      let value\n      for (const key in file.data) {\n        value = file.data[key]\n        if (value !== null && value !== undefined) {\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\n        }\n      }\n      const putAction = file.putAction || ''\n      const queryString = querys.length ? (putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\n      const xhr = new XMLHttpRequest()\n      xhr.open('PUT', putAction + queryString)\n      return this.uploadXhr(xhr, file, file.file as File)\n    },\n    uploadHtml5(file: VueUploadItem): Promise<VueUploadItem> {\n      const form = new window.FormData()\n      let value\n      for (const key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          if (value instanceof File) {\n            form.append(key, value, value.name)\n          } else {\n            form.append(key, JSON.stringify(value))\n          }\n        } else if (value !== null && value !== undefined) {\n          form.append(key, value)\n        }\n      }\n      // @ts-ignore\n      form.append(this.name, file.file, file.file.name || file.file.filename  || file.name)\n      const xhr = new XMLHttpRequest()\n      xhr.open('POST', file.postAction || '')\n      return this.uploadXhr(xhr, file, form)\n    },\n\n    uploadXhr(xhr:XMLHttpRequest, ufile: VueUploadItem | undefined | false, body: FormData | Blob): Promise<VueUploadItem> {\n      let file = ufile\n      let speedTime = 0\n      let speedLoaded = 0\n\n      // 进度条\n      xhr.upload.onprogress = (e: ProgressEvent) => {\n        // 还未开始上传 已删除 未激活\n        if (!file) {\n          return\n        }\n        file = this.get(file)\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\n          return\n        }\n\n        // 进度 速度 每秒更新一次\n        const speedTime2 = Math.round(Date.now() / 1000)\n        if (speedTime2 === speedTime) {\n          return\n        }\n        speedTime = speedTime2\n\n        \n        file = this.update(file, {\n          progress: (e.loaded / e.total * 100).toFixed(2),\n          speed: e.loaded - speedLoaded,\n        })\n        speedLoaded = e.loaded\n      }\n\n      // 检查激活状态\n      let interval: number| undefined = window.setInterval(()  => {\n        if (file) {\n          if ((file = this.get(file))) {\n            if (file?.fileObject && !file.success && !file.error && file.active) {\n              return\n            }\n          }\n        }\n\n        if (interval) {\n          clearInterval(interval)\n          interval = undefined\n        }\n\n        try {\n          xhr.abort()\n          xhr.timeout = 1\n        } catch (e) {\n        }\n      }, 100)\n\n      return new Promise((resolve: (u: VueUploadItem) => void, reject: (e: Error) => void) => {\n        if (!file) {\n          reject(new Error('not_exists'))\n          return\n        }\n        let complete: boolean\n        const fn = (e: ProgressEvent) => {\n          // 已经处理过了\n          if (complete) {\n            return\n          }\n          complete = true\n          if (interval) {\n            clearInterval(interval)\n            interval = undefined\n          }\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n          file = this.get(file)\n\n          // 不存在直接响应\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n\n          // 不是文件对象\n          if (!file.fileObject) {\n            return reject(new Error('file_object'))\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            if (file.error instanceof Error) {\n              return reject(file.error)\n            }\n            return reject(new Error(file.error))\n          }\n\n          // 未激活\n          if (!file.active) {\n            return reject(new Error('abort'))\n          }\n\n\n          // 已完成 直接相应\n          if (file.success) {\n            return resolve(file)\n          }\n\n          const data: {[key: string]: any} = {}\n\n          switch (e.type) {\n            case 'timeout':\n            case 'abort':\n              data.error = e.type\n              break\n            case 'error':\n              if (!xhr.status) {\n                data.error = 'network'\n              } else if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              }\n              break\n            default:\n              if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              } else {\n                data.progress = '100.00'\n              }\n          }\n\n          if (xhr.responseText) {\n            const contentType = xhr.getResponseHeader('Content-Type')\n            if (contentType && contentType.indexOf('/json') !== -1) {\n              data.response = JSON.parse(xhr.responseText)\n            } else {\n              data.response = xhr.responseText\n            }\n          }\n\n          // 更新\n          // @ts-ignore\n          file = this.update(file, data)\n          \n          if (!file) {\n            return reject(new Error('abort'))\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            if (file.error instanceof Error) {\n              return reject(file.error)\n            }\n            return reject(new Error(file.error))\n          }\n\n          // 响应\n          return resolve(file)\n        }\n\n        // 事件\n        xhr.onload = fn\n        xhr.onerror = fn\n        xhr.onabort = fn\n        xhr.ontimeout = fn\n        \n\n        // 超时\n        if (file.timeout) {\n          xhr.timeout = file.timeout\n        }\n\n        // headers\n        for (const key in file.headers) {\n          xhr.setRequestHeader(key, file.headers[key])\n        }\n\n        // 更新 xhr\n        // @ts-ignore\n        file = this.update(file, { xhr })\n\n        // 开始上传\n        file && xhr.send(body)\n      })\n    },\n    uploadHtml4(ufile: VueUploadItem | undefined | false): Promise<VueUploadItem> {\n      let file = ufile\n      if (!file) {\n        return Promise.reject(new Error('not_exists'))\n      }\n      const onKeydown = function (e: any) {\n        if (e.keyCode === 27) {\n          e.preventDefault()\n        }\n      }\n\n      const iframe = document.createElement('iframe')\n      iframe.id = 'upload-iframe-' + file.id\n      iframe.name = 'upload-iframe-' + file.id\n      iframe.src = 'about:blank'\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\n\n\n      const form: HTMLFormElement = document.createElement('form')\n\n      form.setAttribute('action', file.postAction || '')\n\n      form.name = 'upload-form-' + file.id\n\n      form.setAttribute('method', 'POST')\n      form.setAttribute('target', 'upload-iframe-' + file.id)\n      form.setAttribute('enctype', 'multipart/form-data')\n\n      for (const key in file.data) {\n        let value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          value = JSON.stringify(value)\n        }\n        if (value !== null && value !== undefined) {\n          const el = document.createElement('input')\n          el.type = 'hidden'\n          el.name = key\n          el.value = value\n          form.appendChild(el)\n        }\n      }\n\n      form.appendChild(file.el as HTMLInputElement)\n\n      document.body.appendChild(iframe).appendChild(form)\n\n\n      const getResponseData = function (): string | null {\n        let doc\n        try {\n          if (iframe.contentWindow) {\n            doc = iframe.contentWindow.document\n          }\n        } catch (err) {\n        }\n        if (!doc) {\n          try {\n            // @ts-ignore\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\n          } catch (err) {\n            // @ts-ignore\n            doc = iframe.document\n          }\n        }\n        // @ts-ignore\n        if (doc?.body) {\n          return doc.body.innerHTML\n        }\n        return null\n      }\n\n      return new Promise((resolve: (u: VueUploadItem) => void, reject: (e: Error) => void) => {\n        setTimeout(() => {\n          if (!file)   {\n            reject(new Error('not_exists'))\n            return\n          }\n\n          file = this.update(file, { iframe })\n\n          // 不存在\n          if (!file) {\n            return reject(new Error('not_exists'))\n          }\n\n          // 定时检查\n          let interval: number | undefined = window.setInterval(() => {\n            if (file) {\n              if ((file = this.get(file))) {\n                if (file.fileObject && !file.success && !file.error && file.active) {\n                  return\n                }\n              }\n            }\n\n            if (interval) {\n              clearInterval(interval)\n              interval = undefined\n            }\n            // @ts-ignore\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\n          }, 100)\n\n\n          let complete: boolean\n          const fn = (e: Event | string) => {\n            // 已经处理过了\n            if (complete) {\n              return\n            }\n            complete = true\n\n            if (interval) {\n              clearInterval(interval)\n              interval = undefined\n            }\n\n            // 关闭 esc 事件\n            document.body.removeEventListener('keydown', onKeydown)\n\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            file = this.get(file)\n\n            // 不存在直接响应\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            // 不是文件对象\n            if (!file.fileObject) {\n              return reject(new Error('file_object'))\n            }\n\n            // 有错误自动响应\n            if (file.error) {\n              if (file.error instanceof Error) {\n                return reject(file.error)\n              }\n              return reject(new Error(file.error))\n            }\n\n            // 未激活\n            if (!file.active) {\n              return reject(new Error('abort'))\n            }\n\n            // 已完成 直接相应\n            if (file.success) {\n              return resolve(file)\n            }\n\n            let response: any = getResponseData()\n            const data: {[key: string]: any} = {}\n            if (typeof e === 'string') {\n               return reject(new Error(e))\n            }\n            switch (e.type) {\n              case 'abort':\n                data.error = 'abort'\n                break\n              case 'error':\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.error = 'denied'\n                }\n                break\n              default:\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.progress = '100.00'\n                }\n            }\n\n            if (response !== null) {\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\n                try {\n                  response = JSON.parse(response)\n                } catch (err) {\n                }\n              }\n              data.response = response\n            }\n\n            // 更新\n            file = this.update(file, data)\n            if (!file) {\n              return reject(new Error('not_exists'))\n            }\n\n            if (file?.error) {\n              if (file.error instanceof Error) {\n                return reject(file.error)\n              }\n              return reject(new Error(file.error))\n            }\n\n            // 响应\n            return resolve(file)\n          }\n\n\n          // 添加事件\n          iframe.onload = fn\n          iframe.onerror = fn\n          iframe.onabort = fn\n\n\n          // 禁止 esc 键\n          document.body.addEventListener('keydown', onKeydown)\n\n          // 提交\n          form.submit()\n        }, 50)\n      }).then(function (res: VueUploadItem): VueUploadItem {\n        iframe?.parentNode?.removeChild(iframe)\n        return res\n      }).catch(function (res: any) {\n        iframe?.parentNode?.removeChild(iframe)\n        return res\n      })\n    },\n\n    watchActive(active: boolean) {\n      let file\n      let index = 0\n      while ((file = this.files[index])) {\n        index++\n        if (!file.fileObject) {\n          // 不是文件对象\n        } else if (active && !this.destroy) {\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\n            break\n          }\n          if (!file.active && !file.error && !file.success) {\n            this.update(file, { active: true })\n          }\n        } else {\n          if (file.active) {\n            this.update(file, { active: false })\n          }\n        }\n      }\n      if (this.uploading === 0) {\n        this.active = false\n      }\n    },\n\n    watchDrop(newDrop: boolean | string | HTMLElement | null, oldDrop: boolean | string | HTMLElement | undefined = undefined) {\n      if (!this.features.drop) {\n        return\n      }\n      if (newDrop === oldDrop) {\n        return\n      }\n\n      // 移除挂载\n      if (this.dropElement) {\n        try {\n          document.removeEventListener('dragenter', this.onDragenter, false)\n          document.removeEventListener('dragleave', this.onDragleave, false)\n          document.removeEventListener('drop', this.onDocumentDrop, false)\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\n        } catch (e) {\n        }\n      }\n\n      let el: HTMLElement | null = null\n\n      if (!newDrop) {\n        // empty\n      } else if (typeof newDrop === 'string') {\n        // @ts-ignore\n        el = document.querySelector(newDrop) || this.$root.$el.querySelector(newDrop)\n      } else if (newDrop === true) {\n        // @ts-ignore\n        el = this.$parent.$el\n      } else {\n        el = newDrop\n      }\n      this.dropElement = el\n\n      if (this.dropElement) {\n        document.addEventListener('dragenter', this.onDragenter, false)\n        document.addEventListener('dragleave', this.onDragleave, false)\n        document.addEventListener('drop', this.onDocumentDrop, false)\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\n        this.dropElement.addEventListener('drop', this.onDrop, false)\n      }\n    },\n\n    onDragenter(e: DragEvent) {\n      e.preventDefault()\n      if (this.dropActive) {\n        return\n      }\n      if (!e.dataTransfer) {\n        return\n      }\n      const dt = e.dataTransfer\n      if (dt?.files?.length) {\n        this.dropActive = true\n      } else if (!dt.types) {\n        this.dropActive = true\n      } else if (dt.types.indexOf && dt.types.indexOf('Files') !== -1) {\n        this.dropActive = true\n        // @ts-ignore\n      } else if (dt.types?.contains && dt.types.contains('Files')) {\n        this.dropActive = true\n      }\n    },\n    onDragleave(e: DragEvent) {\n      e.preventDefault()\n      if (!this.dropActive) {\n        return\n      }\n\n      // @ts-ignore\n      if (e.target.nodeName === 'HTML' || e.target === e.explicitOriginalTarget || (!e.fromElement && (e.clientX <= 0 || e.clientY <= 0 || e.clientX >= window.innerWidth || e.clientY >= window.innerHeight))) {\n        this.dropActive = false\n      }\n    },\n    onDragover(e: DragEvent) {\n      e.preventDefault()\n    },\n    onDocumentDrop() {\n      this.dropActive = false\n    },\n    onDrop(e: DragEvent) {\n      e.preventDefault()\n      e.dataTransfer && this.addDataTransfer(e.dataTransfer)\n    },\n    async inputOnChange(e: Event) {\n      if (!(e.target instanceof HTMLInputElement)) {\n        return Promise.reject(new Error(\"not HTMLInputElement\"))\n      }\n      const target = e.target\n      const reinput = (res: any) => {\n        this.reload = true\n        // @ts-ignore\n        this.$nextTick(() => {\n          this.reload = false\n        })\n        return res\n      }\n\n      return this.addInputFile(e.target).then(reinput).catch(reinput)\n    },\n  },\n})\n</script>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n"],"names":["ChunkUploadDefaultHandler","defineComponent","_mergeProps"],"mappings":"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"}